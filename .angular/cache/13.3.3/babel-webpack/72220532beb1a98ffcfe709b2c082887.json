{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nexport let BookingComponent = /*#__PURE__*/(() => {\n  class BookingComponent {\n    constructor(fb, dialogRef) {\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.form = this.fb.group({\n        description: ['', Validators.required],\n        releasedAt: [new Date(), Validators.required]\n      });\n    }\n\n    ngOnInit() {}\n\n    close() {\n      this.dialogRef.close();\n    }\n\n    save() {\n      this.dialogRef.close(this.form.value);\n    }\n\n  }\n\n  BookingComponent.ɵfac = function BookingComponent_Factory(t) {\n    return new (t || BookingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n  };\n\n  BookingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookingComponent,\n    selectors: [[\"app-booking\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"edit-course-form\"], [\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Course Description\", \"formControlName\", \"description\"], [\"matInput\", \"\", \"formControlName\", \"releasedAt\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"myDatepicker\", \"\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function BookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-dialog-content\", 2)(4, \"mat-form-field\");\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\");\n        i0.ɵɵelement(7, \"input\", 4)(8, \"mat-datepicker-toggle\", 5)(9, \"mat-datepicker\", null, 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-dialog-actions\")(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function BookingComponent_Template_button_click_12_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(13, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function BookingComponent_Template_button_click_14_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(15, \"Save\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(10);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatFormField, i4.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.MatSuffix, i2.MatDialogActions, i5.MatButton],\n    styles: [\"\"]\n  });\n  return BookingComponent;\n})();\nexport function openEditCourseDialog(dialog) {\n  const config = new MatDialogConfig();\n  config.disableClose = true;\n  config.autoFocus = true;\n  config.panelClass = \"modal-panel\";\n  config.backdropClass = \"backdrop-modal-panel\";\n  const dialogRef = dialog.open(BookingComponent, config);\n  return dialogRef.afterClosed();\n}","map":null,"metadata":{},"sourceType":"module"}